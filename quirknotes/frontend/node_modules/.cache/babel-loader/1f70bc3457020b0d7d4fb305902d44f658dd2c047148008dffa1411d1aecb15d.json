{"ast":null,"code":"var _jsxFileName = \"/Users/kennywu/CSCC01/lab3/C01Lab3/quirknotes/frontend/src/Dialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseNote = {\n  title: \"\",\n  content: \"\"\n};\nfunction Dialog({\n  open,\n  initialNote,\n  closeDialog,\n  postNote: postNoteState,\n  patchNote: patchNoteState\n}) {\n  _s();\n  // -- Dialog props --\n  const [note, setNote] = useState(baseNote);\n  const [status, setStatus] = useState(\"\");\n\n  // -- Dialog functions --\n  useEffect(() => {\n    !initialNote && setNote(baseNote);\n    initialNote && setNote(initialNote);\n  }, [initialNote]);\n  const close = () => {\n    setStatus(\"\");\n    setNote(baseNote);\n    closeDialog();\n  };\n\n  // -- Database interaction functions --\n  const postNote = async () => {\n    if (!note || !note.title || !note.content) {\n      return;\n    }\n    setStatus(\"Loading...\");\n    try {\n      await fetch(\"http://localhost:4000/postNote\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: note.title,\n          content: note.content\n        })\n      }).then(async response => {\n        if (!response.ok) {\n          setStatus(`Error trying to post note`);\n          console.log(\"Served failed:\", response.status);\n        } else {\n          await response.json().then(data => {\n            postNoteState(data.insertedId, note.title, note.content);\n            //setStatus(\"Note posted!\") // Can be replaced with close(), if you want!\n            close();\n          });\n        }\n      });\n    } catch (error) {\n      setStatus(\"Error trying to post note\");\n      console.log(\"Fetch function failed:\", error);\n    }\n  };\n  const patchNote = async () => {\n    if (!note || !note.title || !note.content) {\n      return;\n    }\n    setStatus(\"Loading...\");\n    try {\n      await fetch(`http://localhost:4000/patchNote/${initialNote._id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: note.title,\n          content: note.content\n        })\n      }).then(async response => {\n        if (!response.ok) {\n          setStatus(`Error trying to patch note ${response.status}`);\n          console.log(\"Served failed:\", response.status);\n        } else {\n          await response.json().then(data => {\n            patchNoteState(initialNote._id, note.title, note.content);\n            close();\n          });\n        }\n      });\n    } catch (error) {\n      setStatus(\"Error trying to post note\");\n      console.log(\"Fetch function failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    open: open,\n    style: DialogStyle.dialog,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Your note title goes here!\",\n      type: \"text\",\n      value: note.title,\n      maxLength: 30,\n      style: DialogStyle.title,\n      onChange: e => setNote({\n        ...note,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your note content goes here!\",\n      value: note.content,\n      rows: 5,\n      style: DialogStyle.content,\n      onChange: e => setNote({\n        ...note,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: DialogStyle.buttonWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initialNote ? patchNote : postNote,\n        disabled: !note.title || !note.content,\n        children: initialNote ? \"Patch Note\" : \"Post Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), status, /*#__PURE__*/_jsxDEV(\"button\", {\n        style: DialogStyle.closeButton,\n        onClick: () => close(),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Dialog, \"pQH8s95QZvx/0UQ0CGgOGbYFrBs=\");\n_c = Dialog;\nexport default Dialog;\nconst DialogStyle = {\n  dialog: {\n    width: \"75%\"\n  },\n  title: {\n    fontSize: \"40px\",\n    display: \"block\",\n    width: \"100%\"\n  },\n  content: {\n    fontSize: \"20px\",\n    display: \"block\",\n    width: \"100%\"\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    gap: \"10px\"\n  },\n  closeButton: {\n    justifySelf: \"end\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","baseNote","title","content","Dialog","open","initialNote","closeDialog","postNote","postNoteState","patchNote","patchNoteState","_s","note","setNote","status","setStatus","close","fetch","method","headers","body","JSON","stringify","then","response","ok","console","log","json","data","insertedId","error","_id","style","DialogStyle","dialog","children","placeholder","type","value","maxLength","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","rows","buttonWrapper","onClick","disabled","closeButton","_c","width","fontSize","display","justifyContent","gap","justifySelf","$RefreshReg$"],"sources":["/Users/kennywu/CSCC01/lab3/C01Lab3/quirknotes/frontend/src/Dialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst baseNote = { title: \"\", content: \"\" };\n\nfunction Dialog({ open, initialNote, closeDialog, postNote: postNoteState, patchNote: patchNoteState}) {\n  // -- Dialog props --\n  const [note, setNote] = useState(baseNote);\n  const [status, setStatus] = useState(\"\");\n\n  // -- Dialog functions --\n  useEffect(() => {\n    !initialNote && setNote(baseNote);\n    initialNote && setNote(initialNote);\n  }, [initialNote]);\n\n  const close = () => {\n    setStatus(\"\");\n    setNote(baseNote);\n    closeDialog();\n  };\n\n  // -- Database interaction functions --\n  const postNote = async () => {\n    if (!note || !note.title || !note.content) {\n      return;\n    }\n\n    setStatus(\"Loading...\");\n\n    try {\n      await fetch(\"http://localhost:4000/postNote\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title: note.title, content: note.content }),\n      }).then(async (response) => {\n        if (!response.ok) {\n          setStatus(`Error trying to post note`);\n          console.log(\"Served failed:\", response.status);\n        } else {\n          await response.json().then((data) => {\n            postNoteState(data.insertedId, note.title, note.content);\n            //setStatus(\"Note posted!\") // Can be replaced with close(), if you want!\n            close();\n          });\n        }\n      });\n    } catch (error) {\n      setStatus(\"Error trying to post note\");\n      console.log(\"Fetch function failed:\", error);\n    }\n  };\n\n  const patchNote = async () => {\n    if (!note || !note.title || !note.content) {\n        return;\n      }\n\n      setStatus(\"Loading...\");\n\n    try{\n        await fetch(`http://localhost:4000/patchNote/${initialNote._id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: note.title, content: note.content}),\n        }).then(async (response) => {\n            if (!response.ok) {\n              setStatus(`Error trying to patch note ${response.status}`);\n              console.log(\"Served failed:\", response.status);\n            } else {\n              await response.json().then((data) => {\n                patchNoteState(initialNote._id, note.title, note.content);\n                close();\n              });\n            }\n          });\n    } catch (error) {\n        setStatus(\"Error trying to post note\");\n        console.log(\"Fetch function failed:\", error);\n      }\n  };\n\n  return (\n    <dialog open={open} style={DialogStyle.dialog}>\n      <input\n        placeholder=\"Your note title goes here!\"\n        type=\"text\"\n        value={note.title}\n        maxLength={30}\n        style={DialogStyle.title}\n        onChange={(e) => setNote({ ...note, title: e.target.value })}\n      />\n      <textarea\n        placeholder=\"Your note content goes here!\"\n        value={note.content}\n        rows={5}\n        style={DialogStyle.content}\n        onChange={(e) => setNote({ ...note, content: e.target.value })}\n      />\n      <div style={DialogStyle.buttonWrapper}>\n        <button\n          onClick={initialNote ? patchNote : postNote}\n          disabled={!note.title || !note.content}\n        >\n          {initialNote ? \"Patch Note\" : \"Post Note\"}\n        </button>\n        {status}\n        <button style={DialogStyle.closeButton} onClick={() => close()}>\n          Close\n        </button>\n      </div>\n    </dialog>\n  );\n}\n\nexport default Dialog;\n\nconst DialogStyle = {\n  dialog: { width: \"75%\" },\n  title: {\n    fontSize: \"40px\",\n    display: \"block\",\n    width: \"100%\",\n  },\n  content: {\n    fontSize: \"20px\",\n    display: \"block\",\n    width: \"100%\",\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    gap: \"10px\",\n  },\n  closeButton: { justifySelf: \"end\" },\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}